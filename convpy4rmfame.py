"""
┌───────────────────────────────────────────┐
│            Fame2PyGen                     │
│         FAME → Python                     │
│    Auto-Generated Pipeline                │
└───────────────────────────────────────────┘

This file was automatically generated by Fame2PyGen
Contains the conversion pipeline from FAME script to Python
"""
import polars as pl
from formulas import *
import ple

# Base DataFrame (unfiltered)
df = pl.DataFrame({
    'date': pl.date_range(pl.date(2019, 1, 1), pl.date(2025, 1, 1), '1mo', eager=True),
    'v123': pl.Series('v123', range(1, 74)),
    'v143': pl.Series('v143', range(1, 74)),
    'prices': pl.Series('prices', range(1, 74)),
    'volumes': pl.Series('volumes', range(1, 74)),
})

# ---- MAIN PIPELINE (no date filtering) ----
# --- Level 1: a, a$, b, b$, c$, d, e, f, g, h, pa, pa$, pb, pb$, pc$, pd, pe, pf, pg, ph
df = df.with_columns([
    A().alias('a'),
    A_().alias('a$'),
    B().alias('b'),
    B_().alias('b$'),
    C_().alias('c$'),
    D().alias('d'),
    E().alias('e'),
    F().alias('f'),
    G().alias('g'),
    H().alias('h'),
    PA().alias('pa'),
    PA_().alias('pa$'),
    PB().alias('pb'),
    PB_().alias('pb$'),
    PC_().alias('pc$'),
    PD().alias('pd'),
    PE().alias('pe'),
    PF().alias('pf'),
    PG().alias('pg'),
    PH().alias('ph'),
])

# ---- FISHVOL SUB-PIPELINE for root 'vol_index' (filtered from 2020-01-01) ----
df_fv_vol_index = df.filter(pl.col('date') >= pl.date(2020, 1, 1))
# --- FV Level 1: vol_index
df_fv_vol_index = df_fv_vol_index.with_columns([
    FISHVOL_VOL_INDEX().alias('vol_index')
])

# ---- CONVERT SUB-PIPELINE to 'q' ----
df_cv_q = None
_cv_tmp = (df.select(['date', 'a'])
.group_by_dynamic('date', every='1q')
.agg(pl.col('a').mean().alias('a_q')))
df_cv_q = _cv_tmp if df_cv_q is None else df_cv_q.join(_cv_tmp, on='date', how='full').select(pl.all().unique())

# ---- FINAL MELT AND UNION ----
main_long = df.select(['date', 'a', 'a$', 'b', 'b$', 'c$', 'd', 'e', 'f', 'g', 'h', 'pa', 'pa$', 'pb', 'pb$', 'pc$', 'pd', 'pe', 'pf', 'pg', 'ph']).melt(id_vars='date', variable_name='TIME_SERIES_NAME', value_name='VALUE')
fv_long_vol_index = df_fv_vol_index.select(pl.all().exclude(['v123','v143','prices','volumes'])).melt(id_vars='date', variable_name='TIME_SERIES_NAME', value_name='VALUE')
cv_long_q = (df_cv_q if df_cv_q is not None else pl.DataFrame({'date':[]})) 
cv_long_q = cv_long_q.melt(id_vars='date', variable_name='TIME_SERIES_NAME', value_name='VALUE') if df_cv_q is not None else cv_long_q
final_long = pl.concat([main_long, fv_long_vol_index, cv_long_q], how='vertical_relaxed')
print(final_long)
